<html>
  <head>
    <meta name="GENERATOR" content="BLOCKNOTE.NET"/>
    <meta name="source"/>
    <meta name="source"/>
    <basefont face="Verdana" size="2"/>
    <meta name="generator" content="h-smile:richtext"/>
  </head>
<body>
  <h1>VM namespace</h1>
  <p class="note">Virtual Machine (VM) related methods and properties.</p>
  <p class="note">Methods of this namespace are not always available to the script - they depend on feature parameters of VM creation.</p>
  <dl>
    <h2>Constants</h2>
    <h2>Methods</h2>
		<dl><dt>getProperty</dt>
			<dd>(<b>obj</b>: any, <b>name</b>: string | symbol): any | undefined<p>Gets property of <i>obj</i> by its <i>name.</i></p>
				<p>Equivalent of <code>const name = &quot;...&quot;; var val = obj.(name);</code></p>
				</dd><dt>setProperty</dt>
			<dd>(<b>obj</b>: any, <b>name</b>:string | symbol, <b>val</b>: any): any | undefined<p>Sets property of <i>obj</i> by its <i>name.</i></p>
				<p>Equivalent of <code>const name = &quot;...&quot;; obj.(name) = val;</code></p>
				</dd><dt>entityId</dt>
			<dd>(entity: any) : integer<p>Returns &quot;unique&quot; identifier of an entity. For heap allocated entities (object, array, string, etc) it returns some sequential number (int32). &nbsp;For value types (integer, float, length, etc.) it returns value of hash(entity). Note that uniqueness of id is not strict - there is very low but still probability of conflicts.</p></dd></dl>
    <h2>Properties</h2>
    <dt>unhandledExceptionHandler</dt>
    <dd>r/w, function - global unhandled exception handler. Accepts <code>function(err) : true | false</code> that will receive error object. If that function returns <em>true</em> then the exception is considered as handled and will not be output to stderr port.</dd>
		<dt>pendingAsyncTasks</dt>
		<dd>r-only - list of pending (active) async tasks:&nbsp;<pre>for (var task in VM.pendingAsyncTasks)
  debug task: task.function.fullName; 
</pre></dd></dl>
</body>
</html>