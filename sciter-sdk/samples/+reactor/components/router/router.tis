include "sciter:reactor.tis";

namespace App {
  var routes = [];  // global variable 
  var currentRoute = null; // current route
  var params = null; // params of current route - accessible as App.params in .render() functions
  var main = null; // <main> host element - instance of class Main below - 

  function navigate(toRoute, routeParams = null) {
    var nextRoute = routes[0]; 
    for( var route in routes ) {
      if(toRoute like route.path) {
        nextRoute = route;
        break;
      }
    }
    params = routeParams;    
    if(currentRoute !== nextRoute) {
      currentRoute = nextRoute;
      const mainContent = main.render()[1];
      main.content(mainContent); // note: we are not using reconcilliation here as we need full reload
    }
    else 
      main.update();
  }

  function route( path, factory ) {
    routes.push {
      path:path,
      factory: factory
    }
  }

  // <main> - content area where routed content appears
  class Main : Reactor.Component {

    function this(props,kids) { App.main = this; }

    function render() {
      var route = App.currentRoute || App.routes[0];
      return <main>{route.factory(route.path)}</main>;
    }
  }
}

// hyperlink handler
event ~click $([href]) (evt,hlink) {
  var path = hlink.attributes["href"];
  App.navigate(path);
  return true;
}
